---
# Main Site Playbook 

- name: Complete Server Setup and Application Deployment
  hosts: all
  become: yes
  gather_facts: yes
  
  vars:
    # Default variables
    server_hostname: "{{ ansible_hostname }}"
    server_timezone: UTC
    current_user: "{{ ansible_user_id }}"
    deploy_user: deploy
    deploy_user_shell: /bin/bash
    ssh_port: 22

  pre_tasks:
    - name: Clean up conflicting Docker repositories # avoid conflicts
      shell: |
        rm -f /etc/apt/sources.list.d/docker*.list
        rm -f /usr/share/keyrings/docker*.gpg
        rm -f /usr/share/keyrings/docker-archive-keyring.gpg
      ignore_errors: yes
      tags: always

    - name: Update apt cache after cleanup
      apt:
        update_cache: yes
        cache_valid_time: 0
      tags: always

  tasks:
    - name: Include system setup tasks
      include_tasks: playbooks/system.yml
      tags: [system, packages]

    - name: Include user management tasks
      include_tasks: playbooks/users.yml
      tags: [users, setup]

    - name: Include security configuration tasks
      include_tasks: playbooks/security.yml
      tags: [security, ssh, firewall, fail2ban]

    - name: Include Docker installation tasks
      include_tasks: playbooks/docker.yml
      tags: [docker, containers]

    - name: Include basic directory setup
      include_tasks: playbooks/directories.yml
      tags: [directories, setup]

    - name: Include monitoring setup tasks
      include_tasks: playbooks/monitoring.yml
      tags: [monitoring, logging]

    - name: Copy deployment script to deploy user home
      copy:
        src: "{{ playbook_dir }}/../deploy-app.sh"
        dest: "/home/{{ deploy_user }}/apps/deploy-app.sh"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: '0755'
      tags: [deployment, script]

    - name: Copy app directory to deploy user home
      copy:
        src: "{{ playbook_dir }}/../app/"
        dest: "/home/{{ deploy_user }}/apps/{{ app_name }}"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: preserve
      tags: [deployment, app]

  post_tasks:

    - name: Display setup completion message
      pause:
        prompt: |
          
          SERVER SETUP COMPLETED SUCCESSFULLY!
          
            • Admin user: {{ current_user }} (original user)
            • Deploy user: {{ deploy_user }} (for applications) CREATED
          
            • Firewall: ENABLED (ports 22, {{ ssh_port }}, 80, 443, {{ app_port }})
            • Fail2ban: ENABLED  
            • SSH hardening: DISABLED (for safety)
          
            • Directory: /home/{{ deploy_user }}/apps/{{ app_name }}
            • Docker: INSTALLED and configured

            . App directories: CREATED
            • Proper ownership: SET
          
          NEXT STEPS - DEPLOY THE APPLICATION:
            1. Switch to deploy user: sudo su - {{ deploy_user }}
            2. cd /home/{{ deploy_user }}/apps/
            2. Update .env with the values
            2. Run the deployment script: ./deploy-app.sh
          
          Your server is now ready for application deployment!
          
        seconds: 1
      tags: always